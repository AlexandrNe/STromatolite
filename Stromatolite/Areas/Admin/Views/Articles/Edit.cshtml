@model Stromatolite.Models.Article

@{
    ViewBag.Title = "Редактирование статьи";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@Model.Title</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ArticleID)
        @Html.HiddenFor(model => model.ViewCount)
        @Html.HiddenFor(model => model.Votes)
        @Html.HiddenFor(model => model.TotalRating)

        <div class="form-group">
            @Html.LabelFor(model => model.ImgUrl, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.ImgUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImgUrl, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Abstract, htmlAttributes: new { @class = "control-label" })

                @Html.TextAreaFor(model => model.Abstract, 3, 10, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Abstract, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ArtBody, htmlAttributes: new { @class = "control-label" })

                @Html.TextAreaFor(model => model.ArtBody, 10, 10, new { @class = "form-control tiny" })
                @Html.ValidationMessageFor(model => model.ArtBody, "", new { @class = "text-danger" })

        </div>

        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.AddedDate, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.AddedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddedDate, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.ExpireDate, htmlAttributes: new { @class = "control-label " })

                @Html.EditorFor(model => model.ExpireDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpireDate, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reference, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.Reference, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Reference, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Approved, htmlAttributes: new { @class = "control-label" })

                <div class="checkbox">
                    @Html.EditorFor(model => model.Approved)
                    @Html.ValidationMessageFor(model => model.Approved, "", new { @class = "text-danger" })
                </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CommentsEnabled, htmlAttributes: new { @class = "control-label" })

                <div class="checkbox">
                    @Html.EditorFor(model => model.CommentsEnabled)
                    @Html.ValidationMessageFor(model => model.CommentsEnabled, "", new { @class = "text-danger" })
                </div>

        </div>

        

        <div class="form-group">
            @Html.LabelFor(model => model.SeoUrl, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.SeoUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SeoUrl, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Keywords, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.Keywords, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Keywords, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetaDescription, htmlAttributes: new { @class = "control-label" })
   
                @Html.TextAreaFor(model => model.MetaDescription, 2, 10, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MetaDescription, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("К списку статей", "Index", new { area = "Admin" }, new { @class = "btn btn-default" })
</div>

@section css{
    @Styles.Render("~/Content/tinycss")


}

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/tinymce")
    @Scripts.Render("~/bundles/tinyplugins")
    @Scripts.Render("~/bundles/tiny")
}